; Listing generated by Microsoft (R) Optimizing Compiler Version 19.40.33811.0 

	TITLE	C:\Users\jblbe\Documents\Workspace\ghidra-delinker-extension\src\test\resources\ascii-table\reference\coff-windows\i386\main.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_NUM_ASCII_PROPERTIES
PUBLIC	_s_ascii_properties
PUBLIC	_COLUMNS
EXTRN	_isalpha:PROC
EXTRN	_isupper:PROC
EXTRN	_islower:PROC
EXTRN	_isdigit:PROC
EXTRN	_isspace:PROC
EXTRN	_ispunct:PROC
EXTRN	_isalnum:PROC
EXTRN	_isprint:PROC
EXTRN	_isgraph:PROC
EXTRN	_iscntrl:PROC
_DATA	SEGMENT
_COLUMNS DD	04H
_DATA	ENDS
CONST	SEGMENT
_NUM_ASCII_PROPERTIES DD 0aH
	ORG $+4
_s_ascii_properties DD FLAT:_isgraph
	DB	067H
	ORG $+3
	DD	FLAT:_isprint
	DB	070H
	ORG $+3
	DD	FLAT:_iscntrl
	DB	063H
	ORG $+3
	DD	FLAT:_isspace
	DB	073H
	ORG $+3
	DD	FLAT:_ispunct
	DB	021H
	ORG $+3
	DD	FLAT:_isalnum
	DB	041H
	ORG $+3
	DD	FLAT:_isalpha
	DB	061H
	ORG $+3
	DD	FLAT:_isdigit
	DB	064H
	ORG $+3
	DD	FLAT:_isupper
	DB	055H
	ORG $+3
	DD	FLAT:_islower
	DB	06cH
	ORG $+3
CONST	ENDS
PUBLIC	_print_number
PUBLIC	_print_ascii_entry
PUBLIC	_main
EXTRN	_putchar:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_character$1 = -20					; size = 4
_y$2 = -16						; size = 4
_x$3 = -12						; size = 4
tv78 = -8						; size = 4
_i$ = -4						; size = 4
_main	PROC
; File C:\Users\jblbe\Documents\Workspace\ghidra-delinker-extension\src\test\resources\ascii-table\src\main.c
; Line 60
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
; Line 63
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@main
$LN2@main:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@main:
	cmp	DWORD PTR _i$[ebp], 128			; 00000080H
	jge	SHORT $LN3@main
; Line 64
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	idiv	DWORD PTR _COLUMNS
	mov	DWORD PTR _x$3[ebp], edx
; Line 65
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	idiv	DWORD PTR _COLUMNS
	mov	DWORD PTR _y$2[ebp], eax
; Line 66
	mov	eax, DWORD PTR _x$3[ebp]
	shl	eax, 7
	cdq
	idiv	DWORD PTR _COLUMNS
	add	eax, DWORD PTR _y$2[ebp]
	mov	DWORD PTR _character$1[ebp], eax
; Line 68
	mov	ecx, DWORD PTR _NUM_ASCII_PROPERTIES
	push	ecx
	push	OFFSET _s_ascii_properties
	movzx	edx, BYTE PTR _character$1[ebp]
	push	edx
	call	_print_ascii_entry
	add	esp, 12					; 0000000cH
; Line 70
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	idiv	DWORD PTR _COLUMNS
	mov	eax, DWORD PTR _COLUMNS
	sub	eax, 1
	cmp	edx, eax
	jne	SHORT $LN6@main
	mov	DWORD PTR tv78[ebp], 10			; 0000000aH
	jmp	SHORT $LN7@main
$LN6@main:
	mov	DWORD PTR tv78[ebp], 9
$LN7@main:
	mov	ecx, DWORD PTR tv78[ebp]
	push	ecx
	call	_putchar
	add	esp, 4
; Line 71
	jmp	$LN2@main
$LN3@main:
; Line 73
	xor	eax, eax
; Line 74
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_property$1 = -8					; size = 4
_k$ = -4						; size = 4
_character$ = 8						; size = 1
_properties$ = 12					; size = 4
_num_ascii_properties$ = 16				; size = 4
_print_ascii_entry PROC
; File C:\Users\jblbe\Documents\Workspace\ghidra-delinker-extension\src\test\resources\ascii-table\src\main.c
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 41
	movsx	eax, BYTE PTR _character$[ebp]
	push	eax
	call	_print_number
	add	esp, 4
; Line 42
	push	32					; 00000020H
	call	_putchar
	add	esp, 4
; Line 44
	movsx	ecx, BYTE PTR _character$[ebp]
	push	ecx
	call	_isgraph
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@print_asci
; Line 45
	movsx	edx, BYTE PTR _character$[ebp]
	push	edx
	call	_putchar
	add	esp, 4
	jmp	SHORT $LN6@print_asci
$LN5@print_asci:
; Line 47
	push	32					; 00000020H
	call	_putchar
	add	esp, 4
$LN6@print_asci:
; Line 48
	push	32					; 00000020H
	call	_putchar
	add	esp, 4
; Line 50
	mov	DWORD PTR _k$[ebp], 0
	jmp	SHORT $LN4@print_asci
$LN2@print_asci:
	mov	eax, DWORD PTR _k$[ebp]
	add	eax, 1
	mov	DWORD PTR _k$[ebp], eax
$LN4@print_asci:
	mov	ecx, DWORD PTR _k$[ebp]
	cmp	ecx, DWORD PTR _num_ascii_properties$[ebp]
	jge	SHORT $LN3@print_asci
; Line 51
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _properties$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR _property$1[ebp], ecx
; Line 53
	movsx	edx, BYTE PTR _character$[ebp]
	push	edx
	mov	eax, DWORD PTR _property$1[ebp]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 4
	test	eax, eax
	je	SHORT $LN7@print_asci
; Line 54
	mov	edx, DWORD PTR _property$1[ebp]
	movsx	eax, BYTE PTR [edx+4]
	push	eax
	call	_putchar
	add	esp, 4
	jmp	SHORT $LN8@print_asci
$LN7@print_asci:
; Line 56
	push	32					; 00000020H
	call	_putchar
	add	esp, 4
$LN8@print_asci:
; Line 57
	jmp	SHORT $LN2@print_asci
$LN3@print_asci:
; Line 58
	mov	esp, ebp
	pop	ebp
	ret	0
_print_ascii_entry ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_digit$1 = -8						; size = 4
_n$ = -4						; size = 4
_num$ = 8						; size = 4
_print_number PROC
; File C:\Users\jblbe\Documents\Workspace\ghidra-delinker-extension\src\test\resources\ascii-table\src\main.c
; Line 25
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 28
	mov	DWORD PTR _n$[ebp], 3
	jmp	SHORT $LN4@print_numb
$LN2@print_numb:
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, 1
	mov	DWORD PTR _n$[ebp], eax
$LN4@print_numb:
	cmp	DWORD PTR _n$[ebp], 0
	jl	SHORT $LN3@print_numb
; Line 29
	mov	ecx, DWORD PTR _n$[ebp]
	shl	ecx, 2
	mov	edx, DWORD PTR _num$[ebp]
	sar	edx, cl
	and	edx, -2147483633			; 8000000fH
	jns	SHORT $LN8@print_numb
	dec	edx
	or	edx, -16				; fffffff0H
	inc	edx
$LN8@print_numb:
	mov	DWORD PTR _digit$1[ebp], edx
; Line 31
	cmp	DWORD PTR _digit$1[ebp], 10		; 0000000aH
	jge	SHORT $LN5@print_numb
; Line 32
	mov	eax, DWORD PTR _digit$1[ebp]
	add	eax, 48					; 00000030H
	push	eax
	call	_putchar
	add	esp, 4
	jmp	SHORT $LN6@print_numb
$LN5@print_numb:
; Line 34
	mov	ecx, DWORD PTR _digit$1[ebp]
	add	ecx, 87					; 00000057H
	push	ecx
	call	_putchar
	add	esp, 4
$LN6@print_numb:
; Line 35
	jmp	SHORT $LN2@print_numb
$LN3@print_numb:
; Line 36
	mov	esp, ebp
	pop	ebp
	ret	0
_print_number ENDP
_TEXT	ENDS
END
